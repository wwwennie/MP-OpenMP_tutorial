#
# Choose compiler with "make compiler=NAME" or just "make" to use
# default of GNU compilers.
#

ifeq ($(compiler), intel)	# begin compiler check

CC              = icc
CFLAGS          = -qopenmp -Wall

CXX             = icpc
CXXFLAGS        = -std=c++11 -qopenmp -Wall

FC              = ifort
FFLAGS          = -qopenmp

else ifeq ($(compiler), cray)

CC              = cc
CFLAGS          = -h omp

CXX             = CC
CXXFLAGS        = -h omp

FC              = ftn
FFLAGS          = -h omp

else ifeq ($(compiler), pgi)

CC              = pgcc
CFLAGS          = -mp=nonuma

CXX             = pgc++
CXXFLAGS        = --c++11 -mp=nonuma

FC              = pgfortran
FFLAGS          = -mp=nonuma 

else

CC              = gcc
CFLAGS          = -fopenmp -Wall

CXX             = g++
CXXFLAGS        = -std=c++11 -fopenmp -Wall

FC              = gfortran
FFLAGS          = -fopenmp

endif				# end compiler check

C_SOURCES       = $(wildcard *.c)
CPP_SOURCES     = $(wildcard *.cpp)
FORTRAN_SOURCES = $(wildcard *.f90)
SOURCES         = $(C_SOURCES) $(CPP_SOURCES) $(FORTRAN_SOURCES)

C_TARGETS       = $(C_SOURCES:.c=.x)
CPP_TARGETS     = $(CPP_SOURCES:.cpp=.x)
FORTRAN_TARGETS = $(FORTRAN_SOURCES:.f90=.x)
TARGETS         = $(C_TARGETS) $(CPP_TARGETS) $(FORTRAN_TARGETS)

.PHONY: all     clean

all:    $(TARGETS)

clean: 
	rm -f $(TARGETS)

.SUFFIXES: .x 

%.x: %.cpp
	$(CXX) $(CXXFLAGS) -o $@ $^

%.x: %.c
	$(CC) $(CFLAGS) -o $@ $^

%.x: %.f90
	$(FC) $(FFLAGS) -o $@ $^
